name: Release

on:
  release:
    types: [published]

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Setup git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "<>"

      # We haven't yet merged the released tag into release branch
      # So, we should checkout to released tag to create an actual build
      # We do it before merge cause it can fail,
      # and we don't want to have a broken code in the release branch 

      - name: Checkout to released tag
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      - uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/

      - name: Check build cache
        id: cache
        uses: actions/cache@v3
        with:
          path: dist
          key: ${{ hashFiles('./yarn.lock', './src/**', './rollup.config.js', './jest.config.js') }}

      - name: Create a new build
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
          yarn test
          yarn build

      # The build might get lost between checkouts
      # So, lets save it before
      - name: Save build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

      - name: Checkout to release branch
        uses: actions/checkout@v3
        with:
          ref: release

      - name: Merge the tag into release branch
        run: |
          git merge ${{ github.event.release.tag_name }} -m "ci: merge ${{ github.event.release.tag_name }} tag into release"

      - name: Push tag to protected release branch
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.FULL_ACCESS_GITHUB_TOKEN }}
          branch: release
          tags: true
          unprotect_reviews: true

      - name: Restore build
        uses: actions/download-artifact@v3
        with:
          name: build
          path: dist

      # Now, after the released tag got merged in release branch,
      # we can extract it to use it as a version for NPM package

      - name: Extract version
        id: tag
        uses: olegtarasov/get-tag@v2.1.1
        with:
          tagRegex: 'v(?<full>(?<version>[0-9.]*)(?:-(?<rc>.*))?)'

      - name: Set version from release
        uses: reedyuk/npm-version@1.0.1
        with:
          version: ${{ steps.tag.outputs.full }}

      - name: Create NPM config
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish latest
        if: ${{ steps.tag.outputs.rc == null }}
        run: npm publish

      - name: Publish RC
        if: ${{ steps.tag.outputs.rc != null }}
        run: npm publish --tag ${{ steps.tag.outputs.rc }}